generator client {
	provider = "prisma-client-js"
	previewFeatures = ["referentialIntegrity"]

}

datasource db {
	provider = "postgresql"
	url      = env("DATABASE_URL")
	referentialIntegrity = "prisma"

}

model User {
	id        Int      @id @default(autoincrement())
	username  String   @db.VarChar(255)
	password  String
	email     String  
	createdAt DateTime @default(now())

	comments   Comment[]
	posts      Post[]
	subRedditsOwner SubReddit[]
	token      Token?
	Vote       Vote[]
	Likes      CommentLike[]
	SubscribedSubReddits SubscribedSubReddits[]

	@@unique(username)
	@@unique(email)
}

model Token {
	id     Int    @id @default(autoincrement())
	token  String @default("")
	user   User   @relation(fields: [userId], references: [id])
	userId Int    @unique
}

model SubReddit {
	id        Int      @id @default(autoincrement())
	title      String  @unique @db.VarChar(255)
	createdAt DateTime @default(now())
	image	  String   @default("")
	owner     User     @relation(fields: [ownerId], references: [id])
	ownerId   Int

	posts     Post[]

	subscribers Int @default(0)
	subscribedUsers SubscribedSubReddits[]

}
model SubscribedSubReddits {
	id        Int      @id @default(autoincrement())
	user      User     @relation(fields: [userId], references: [id])
	userId    Int
	subReddit SubReddit @relation(fields: [subRedditId], references: [id])
	subRedditId Int
}
model Post {
	id          Int       @id @default(autoincrement())
	title       String    @db.VarChar(255)
	text        String	  @db.Text()
	createdAt   DateTime  @default(now())
	userId      Int
	subRedditId Int?
	subReddit   SubReddit? @relation(fields: [subRedditId], references: [id])
	user        User      @relation(fields: [userId], references: [id])
	comments    Comment[]
	vote        Vote[]
	totalVotes  Int       @default(0)
}

model Comment {
	id        Int      @id @default(autoincrement())
	text      String   @db.VarChar(255)
	createdAt DateTime @default(now())

	post      Post     @relation(fields: [postId], references: [id])
	postId    Int

	user      User     @relation(fields: [userId], references: [id])
	userId    Int

	like	  Int 	   @default(0)
	likes  CommentLike[]

}

model CommentLike {
	id        Int      @id @default(autoincrement())

	comment   Comment  @relation(fields: [commentId], references: [id])
	commentId Int

	user 	User     @relation(fields: [userId], references: [id])
	userId Int
}

model Vote {
	id     Int  @id @default(autoincrement())
	userId Int
	postId Int
	value  Boolean
	user   User @relation(fields: [userId], references: [id])
	post   Post @relation(fields: [postId], references: [id])
	
}
